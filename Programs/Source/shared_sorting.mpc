from Compiler.IPAsorts import mp_spdz_radix_sort

def print_data_row(i):
    print_ln('%s %s %s %s %s %s', data[i][0].reveal(), data[i][1].reveal(), data[i][2].reveal(), data[i][3].reveal(),data[i][4].reveal(),data[i][5].reveal())


program.use_split(3)
source = 0
n = 10000
key = 0

match_keys = Array(n, sint)
data = Matrix(n, 6, sint)

@for_range_opt(n)
def _(i):
    for j in range(6):
       value = 0
       for k in range(3):
       	   value += sint.get_input_from(k)
       data[i][j] = value
       if(j==0):
            match_keys[i] = value



mp_spdz_radix_sort(match_keys, data)
data.sort(n_bits=32)


@for_range_opt(n)
def _(i):
        print_data_row(i)

